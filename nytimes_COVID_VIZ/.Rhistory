}
else if (df[i]==0&df[i-1]==0){
y<-append(y,0)
}
else{
y<-append(y,(df[i]-df[i-1])/df[i-1] * 100)
}
}
return(y)
}
percChange(c(NA,NA,NA))
Country_deaths <- filter(deaths, `Province/State`=="Washington")
Country_deaths <- t(Country_deaths[5:length(Country_deaths)])
Country_recovered <- filter(recovered, `Province/State`=="Washington")
Country_recovered <- t(Country_recovered[5:length(Country_recovered)])
Country_proportion <- Country_deaths/(Country_deaths+Country_recovered)*100
d <- colnames(recovered[6:length(recovered)])
plot(percChange(Country_proportion)~d,
main = paste("Washington" ,"Percentage Change of Deaths/(Deaths+Recovered)"),
xlab= "Time", ylab = "Percentage", type = "o")
percChange <- function(df){
y<-numeric()
for(i in 2:length(df)){
if (is.na(df[i])&is.na(df[i-1])){
y<-append(y,NA)
}
else if (df[i]==0&df[i-1]==0){
y<-append(y,0)
}
else{
y<-append(y,(df[i]-df[i-1])/df[i-1] * 100)
}
}
return(y)
}
percChange(c(NA,NA,NA,1,2,3,4,5))
percChange <- function(df){
y<-numeric()
for(i in 2:length(df)){
if (is.na(df[i])&is.na(df[i-1])){
y<-append(y,NA)
}
else if (df[i]==0&df[i-1]==0){
y<-append(y,0)
}
else{
y<-append(y,(df[i]-df[i-1])/df[i-1] * 100)
}
}
return(y)
}
plot(percChange(c(NA,NA,NA,1,2,3,4,5)))
percChange(Country_proportion)
plot(percChange(Country_proportion))
plot(percChange(Country_proportion), type = "o")
Country_deaths <- filter(deaths, `Province/State`=="Washington")
Country_deaths <- t(Country_deaths[5:length(Country_deaths)])
Country_recovered <- filter(recovered, `Province/State`=="Washington")
Country_recovered <- t(Country_recovered[5:length(Country_recovered)])
Country_proportion <- Country_deaths/(Country_deaths+Country_recovered)*100
d <- colnames(recovered[6:length(recovered)])
plot(percChange(Country_proportion)~d,
main = paste("Washington" ,"Percentage Change of Deaths/(Deaths+Recovered)"),
xlab= "Time", ylab = "Percentage", type = "o")
plot(percChange(Country_proportion)~d, type = "o")
plot(percChange(Country_proportion), type = "o")
d
Country_deaths <- filter(deaths, `Province/State`=="Washington")
Country_deaths <- t(Country_deaths[5:length(Country_deaths)])
Country_recovered <- filter(recovered, `Province/State`=="Washington")
Country_recovered <- t(Country_recovered[5:length(Country_recovered)])
Country_proportion <- Country_deaths/(Country_deaths+Country_recovered)*100
d <- as.Date(colnames(recovered[6:length(recovered)]),format = "%m/%d/%y")
plot(percChange(Country_proportion)~d,
main = paste("Washington" ,"Percentage Change of Deaths/(Deaths+Recovered)"),
xlab= "Time", ylab = "Percentage", type = "o")
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
Country_confirmed <- filter(data_confirmed, Country=="US")
Country_deaths <- filter(data_deaths, Country=="US")
Country_recovered <- filter(data_recovered, Country=="US")
Country_proportion <- Country_deaths$Deaths/(Country_deaths$Deaths+Country_recovered$Recovered)*100
plot(percChange(Country_proportion)~Country_recovered$Date[2:length(Country_deaths$Date)],
main = paste("US","Percentage Change of Deaths/(Deaths+Recovered)"),
xlab= "Time", ylab = "Percentage", type = "o")
Country_confirmed <- filter(data_confirmed, Country=="US")
Country_deaths <- filter(data_deaths, Country=="US")
Country_recovered <- filter(data_recovered, Country=="US")
Country_proportion <- Country_deaths$Deaths/(Country_deaths$Deaths+Country_recovered$Recovered)*100
plot(percChange(Country_proportion)~Country_recovered$Date[2:length(Country_deaths$Date)],
main = paste("US","Percentage Change of Deaths/(Deaths+Recovered)"),
xlab= "Time", ylab = "Percentage", type = "o")
Country_proportion
percChange <- function(df){
y<-numeric()
for(i in 2:length(df)){
if (is.na(df[i])&is.na(df[i-1])){
y<-append(y,NA)
}
else if (df[i]==0&is.NA(df[i-1])){
y<-append(y,NA)
}
else if (df[i]==0&df[i-1]==0){
y<-append(y,0)
}
else{
y<-append(y,(df[i]-df[i-1])/df[i-1] * 100)
}
}
return(y)
}
plot(percChange(c(NA,NA,NA,1,2,3,4,5)))
percChange <- function(df){
y<-numeric()
for(i in 2:length(df)){
if (is.na(df[i])&is.na(df[i-1])){
y<-append(y,NA)
}
else if (df[i]==0&is.na(df[i-1])){
y<-append(y,NA)
}
else if (df[i]==0&df[i-1]==0){
y<-append(y,0)
}
else{
y<-append(y,(df[i]-df[i-1])/df[i-1] * 100)
}
}
return(y)
}
plot(percChange(c(NA,NA,NA,1,2,3,4,5)))
Country_confirmed <- filter(data_confirmed, Country=="US")
Country_deaths <- filter(data_deaths, Country=="US")
Country_recovered <- filter(data_recovered, Country=="US")
Country_proportion <- Country_deaths$Deaths/(Country_deaths$Deaths+Country_recovered$Recovered)*100
plot(percChange(Country_proportion)~Country_recovered$Date[2:length(Country_deaths$Date)],
main = paste("US","Percentage Change of Deaths/(Deaths+Recovered)"),
xlab= "Time", ylab = "Percentage", type = "o")
Country_confirmed <- filter(data_confirmed, Country=="US")
Country_deaths <- filter(data_deaths, Country=="US")
Country_recovered <- filter(data_recovered, Country=="US")
Country_proportion <- Country_deaths$Deaths/(Country_deaths$Deaths+Country_recovered$Recovered)*100
plot(percChange(Country_proportion),
main = paste("US","Percentage Change of Deaths/(Deaths+Recovered)"),
xlab= "Time", ylab = "Percentage", type = "o")
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
Country_deaths <- filter(deaths, `Province/State`=="Diamond Princess")
Country_deaths <- t(Country_deaths[5:length(Country_deaths)])
Country_recovered <- filter(recovered, `Province/State`=="Diamond Princess")
Country_recovered <- t(Country_recovered[5:length(Country_recovered)])
Country_proportion <- Country_deaths/(Country_deaths+Country_recovered)*100
d <- as.Date(colnames(recovered[6:length(recovered)]),format = "%m/%d/%y")
plot(percChange(Country_proportion)~d,
main = paste("Washington" ,"Percentage Change of Deaths/(Deaths+Recovered)"),
xlab= "Time", ylab = "Percentage", type = "o")
plot(percChange(Country_proportion), type = "o")
Country_deaths <- filter(deaths, `Province/State`=="Diamond Princess")
Country_deaths <- t(Country_deaths[5:length(Country_deaths)])
Country_recovered <- filter(recovered, `Province/State`=="Diamond Princess")
Country_recovered <- t(Country_recovered[5:length(Country_recovered)])
Country_proportion <- Country_deaths/(Country_deaths+Country_recovered)*100
d <- as.Date(colnames(recovered[5:length(recovered)]),format = "%m/%d/%y")
plot(percChange(Country_proportion)~d,
main = paste("Washington" ,"Percentage Change of Deaths/(Deaths+Recovered)"),
xlab= "Time", ylab = "Percentage", type = "o")
Country_deaths <- filter(deaths, `Province/State`=="Diamond Princess")
Country_deaths <- t(Country_deaths[5:length(Country_deaths)])
Country_recovered <- filter(recovered, `Province/State`=="Diamond Princess")
Country_recovered <- t(Country_recovered[5:length(Country_recovered)])
Country_proportion <- Country_deaths/(Country_deaths+Country_recovered)*100
d <- as.Date(colnames(recovered[5:length(recovered)]),format = "%m/%d/%y")
plot(percChange(Country_proportion),
main = paste("Washington" ,"Percentage Change of Deaths/(Deaths+Recovered)"),
xlab= "Time", ylab = "Percentage", type = "o")
Country_proportion
d
Country_deaths <- filter(deaths, `Province/State`=="Diamond Princess")
Country_deaths <- t(Country_deaths[5:length(Country_deaths)])
Country_recovered <- filter(recovered, `Province/State`=="Diamond Princess")
Country_recovered <- t(Country_recovered[5:length(Country_recovered)])
Country_proportion <- Country_deaths/(Country_deaths+Country_recovered)*100
d <- as.Date(colnames(recovered[5:length(recovered)]),format = "%m/%d/%y")
plot(Country_proportion,
main = paste("Washington" ,"Percentage Change of Deaths/(Deaths+Recovered)"),
xlab= "Time", ylab = "Percentage", type = "o")
Country_deaths <- filter(deaths, `Province/State`=="Diamond Princess")
Country_deaths <- t(Country_deaths[5:length(Country_deaths)])
Country_recovered <- filter(recovered, `Province/State`=="Diamond Princess")
Country_recovered <- t(Country_recovered[5:length(Country_recovered)])
Country_proportion <- Country_deaths/(Country_deaths+Country_recovered)*100
d <- as.Date(colnames(recovered[5:length(recovered)]),format = "%m/%d/%y")
plot(percChange(Country_proportion),
main = paste("Washington" ,"Percentage Change of Deaths/(Deaths+Recovered)"),
xlab= "Time", ylab = "Percentage", type = "o")
Country_deaths <- filter(deaths, `Province/State`=="Diamond Princess")
Country_deaths <- t(Country_deaths[5:length(Country_deaths)])
Country_recovered <- filter(recovered, `Province/State`=="Diamond Princess")
Country_recovered <- t(Country_recovered[5:length(Country_recovered)])
Country_proportion <- Country_deaths/(Country_deaths+Country_recovered)*100
d <- as.Date(colnames(recovered[5:length(recovered)]),format = "%m/%d/%y")
plot(Country_proportion,
main = paste("Washington" ,"Percentage Change of Deaths/(Deaths+Recovered)"),
xlab= "Time", ylab = "Percentage", type = "o")
Country_proportion[,2]
plot(Country_proportion[,2])
Country_recovered
runApp('Desktop/COVID19-VIZ')
1:10[1]
1:10[6]
(1:10)[-3]
x <-
c(1,2, "D",3)
x[-"D"]
x[!X=="D"]
x[!x=="D"]
x
x[!x=="E"]
x[!x=="E"&!x=="D"]
x[!x=="2"&!x=="D"]
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
shiny::runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
shiny::runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
shiny::runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
runApp('Desktop/COVID-19-master/COVID_VIZ/nytimes-COVID-DATA')
url_confirmed <- "https://raw.githubusercontent.com/nytimes/covid-19-data/blob/master/us-counties.csv"
# ------ Data -----
## Raw Data
confirmed <- read_csv(url(url_confirmed))
url_confirmed <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv"
# ------ Data -----
## Raw Data
confirmed <- read_csv(url(url_confirmed))
confirmed <- confirmed[1:length(confirmed)]
View(confirmed)
url_nytimes <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv"
# ------ Data -----
## Raw Data
data <- read_csv(url(url_confirmed))
View(data)
url_nytimes <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv"
# ------ Data -----
## Raw Data
data <- read_csv(url(url_confirmed))
as.Date(data$date, format="%y/%m/%d")
url_nytimes <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv"
# ------ Data -----
## Raw Data
data <- read_csv(url(url_confirmed))
data$date = as.Date(data$date, format="%y/%m/%d")
library(dplyr)
url_nytimes <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv"
# ------ Data -----
## Raw Data
data <- read_csv(url(url_confirmed))
data$date = as.Date(data$date, format="%y/%m/%d")
data
unique(data$state)
library(dplyr)
url_nytimes_counties <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv"
url_nytimes_states <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv"
# ------ Data -----
## Raw Data
counties <- read_csv(url(url_nytimes_counties))
counties$date = as.Date(counties$date, format="%y/%m/%d")
states <- read_csv(url(url_nytimes_states))
states$date = as.Date(counties$states, format="%y/%m/%d")
library(dplyr)
url_nytimes_counties <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv"
url_nytimes_states <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv"
# ------ Data -----
## Raw Data
counties <- read_csv(url(url_nytimes_counties))
counties$date = as.Date(counties$date, format="%y/%m/%d")
states <- read_csv(url(url_nytimes_states))
states$date = as.Date(counties$deate, format="%y/%m/%d")
library(dplyr)
url_nytimes_counties <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv"
url_nytimes_states <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv"
# ------ Data -----
## Raw Data
counties <- read_csv(url(url_nytimes_counties))
counties$date = as.Date(counties$date, format="%y/%m/%d")
states <- read_csv(url(url_nytimes_states))
states$date = as.Date(counties$date, format="%y/%m/%d")
View(states)
library(dplyr)
url_nytimes_counties <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv"
url_nytimes_states <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv"
# ------ Data -----
## Raw Data
counties <- read_csv(url(url_nytimes_counties))
counties$date = as.Date(counties$date, format="%y/%m/%d")
states <- read_csv(url(url_nytimes_states))
states$date = as.Date(tates$date, format="%y/%m/%d")
library(dplyr)
url_nytimes_counties <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv"
url_nytimes_states <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv"
# ------ Data -----
## Raw Data
counties <- read_csv(url(url_nytimes_counties))
counties$date = as.Date(counties$date, format="%y/%m/%d")
states <- read_csv(url(url_nytimes_states))
states$date = as.Date(states$date, format="%y/%m/%d")
filter(states == "Washington")
View(states)
filter(states, state == "Washington")
data_state = filter(states, state == "Washington")
plot(data_state$cases~data_state$date)
data_state = filter(states, state == "Washington")
plot(data_state$cases~data_state$date,
main == "Washington")
data_state = filter(states, state == "Washington")
plot(data_state$cases~data_state$date,
main = "Washington")
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
View(states)
View(counties)
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
shiny::runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
c(1,2,3)-3
c(1,2,3)-c(3)
x <- 1:10
x
x[!x==5]
x[!x==8]
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
2==2&&3==3
2==2&3==3
2 == 2 & 3 ==3
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
data_state = filter(counties, county == "Washington")
data_state = filter(counties, county == "Washington")
data_state
data_state = filter(counties, state == "New York" & county == "Washington")
data_state
data_state = filter(counties, state == "New York" & county == "Washington")
plot(data_state$cases~data_state$date)
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
data_county = filter(counties, state == "New York" & county == "Washington")
plot(diff(log(data_county$deaths))~data_county$date[2:length(data_county$date)],
type = "o",
main = paste("Daily Count of Log Scale Deaths in"),
xlab = "Time",
ylab = "Log Count",
col = "black")
data_county = filter(counties, state == "New York" & county == "Washington")
plot(diff(log(data_county$deaths))~data_county$date[2:length(data_county$date)],
type = "o",
main = paste("Daily Count of Log Scale Deaths in"),
xlab = "Time",
ylab = "Log Count",
col = "black")
data_county = filter(counties, state == "New York" & county == "Washington")
plot(diff(log(data_county$deaths)))
data_county = filter(counties, state == "New York" & county == "Washington")
plot(diff(data_county$deaths)~data_county$date[2:length(data_county$date)],
type = "o",
main = paste("Daily Count of Log Scale Deaths in"),
xlab = "Time",
ylab = "Log Count",
col = "black")
data_county = filter(counties, state == "New York" & county == "Washington")
plot(log(diff(data_county$deaths))~data_county$date[2:length(data_county$date)],
type = "o",
main = paste("Daily Count of Log Scale Deaths in"),
xlab = "Time",
ylab = "Log Count",
col = "black")
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
runApp('Desktop/nytimesCOVID/nytimes_COVID_VIZ')
